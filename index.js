"use strict";function runTest(n){function t(n,t){return++COUNT,n?(++PASSING,println("ok "+COUNT+" "+t)):println("not ok "+COUNT+" "+t)}function e(n){return println("# "+n)}return STACK.push(function(){return n(t,e)})}function flush(){return STACK.reduce(function(n,t){return n.then(t)},Promise.resolve()).then(function(){return ISNODE?process.exit():exit()},function(n){return showError(n)})}function exit(n){if(ISNODE&&(process.exitCode=n?n:COUNT&&COUNT===PASSING?0:1),COUNT||println("not ok 1 no tests found"),println("1.."+COUNT),println(),COUNT===PASSING)println("# all tests passed");else{var t=COUNT-PASSING;println("# "+t+" test"+(t>1?"s":"")+" failed")}return println("# test finished in "+(Date.now()-STARTTIME)+" ms"),println()}function showError(n){return println("  ---"),println("  name: "+n.name),println("  message: "+n.message),n.stack&&(println("  stack:"),n.stack.split("\n").forEach(function(t){return t=t.trim(),0!==t.indexOf(n.name)?println("    - "+t):null})),println("  ...")}function println(n){return console.log(n?n.replace("\n",""):"")}var ISNODE="undefined"!=typeof process&&"function"==typeof process.exit&&"function"==typeof process.nextTick,STARTTIME=Date.now(),STACK=[],COUNT=0,PASSING=0;module.exports=runTest,println("TAP version 13"),ISNODE?(process.on("exit",exit),process.nextTick(flush)):setTimeout(flush,0);
